{"version":3,"file":"ngx-socket-io.js","sources":["ngx-socket-io/src/socket-io.service.ts","ngx-socket-io/src/socket-io.module.ts"],"names":["io.default"],"mappings":"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","sourcesContent":["import { Inject } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { share } from 'rxjs/operators';\r\n\r\nimport * as io from 'socket.io-client';\r\n\r\nimport { SocketIoConfig } from './config/socket-io.config';\r\n\r\nexport class WrappedSocket {\r\n    subscribersCounter : number = 0;\r\n    ioSocket: any;\r\n    emptyConfig: SocketIoConfig = {\r\n        url: '',\r\n        options: {}\r\n    };\r\n\r\n    constructor(private config: SocketIoConfig) {\r\n        if (config === undefined) config = this.emptyConfig;\r\n        const url: string = config.url;\r\n        const options: any = config.options;\r\n        var ioFunc = (io as any).default ? (io as any).default : io;\r\n        this.ioSocket = ioFunc(url, options);\r\n    }\r\n\r\n    of(namespace: string) {\r\n        this.ioSocket.of(namespace);\r\n    }\r\n\r\n    on(eventName: string, callback: Function) {\r\n        this.ioSocket.on(eventName, callback);\r\n    }\r\n\r\n    once(eventName: string, callback: Function) {\r\n        this.ioSocket.once(eventName, callback);\r\n    }\r\n\r\n    connect() {\r\n        return this.ioSocket.connect();\r\n    }\r\n\r\n    disconnect(close?: any) {\r\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\r\n    }\r\n\r\n    emit(eventName: string, data?: any, callback?: Function) {\r\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\r\n    }\r\n\r\n    removeListener(eventName: string, callback?: Function) {\r\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\r\n    }\r\n\r\n    removeAllListeners(eventName?: string) {\r\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\r\n    }\r\n\r\n    fromEvent<T>(eventName: string): Observable<T> {\r\n        this.subscribersCounter++;\r\n        return Observable.create( (observer: any) => {\r\n             this.ioSocket.on(eventName, (data: T) => {\r\n                 observer.next(data);\r\n             });\r\n             return () => {\r\n                 if (this.subscribersCounter === 1)\r\n                    this.ioSocket.removeListener(eventName);\r\n            };\r\n        }).pipe(\r\n            share()\r\n        );\r\n    }\r\n\r\n    fromOneTimeEvent<T>(eventName: string): Promise<T> {\r\n        return new Promise<T>(resolve => this.once(eventName, resolve));\r\n    }\r\n\r\n}","import { NgModule, ModuleWithProviders, InjectionToken } from '@angular/core';\r\nimport { SocketIoConfig } from './config/socket-io.config';\r\nimport { WrappedSocket } from './socket-io.service';\r\n\r\n/** Socket factory */\r\nexport function SocketFactory(config: SocketIoConfig) {\r\n    return new WrappedSocket(config);\r\n}\r\n\r\nexport const SOCKET_CONFIG_TOKEN = new InjectionToken<SocketIoConfig>('__SOCKET_IO_CONFIG__');\r\n\r\n@NgModule({})\r\nexport class SocketIoModule {\r\n    static forRoot(config: SocketIoConfig): ModuleWithProviders {\r\n        return {\r\n            ngModule: SocketIoModule,\r\n            providers: [\r\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\r\n                { \r\n                    provide: WrappedSocket,\r\n                    useFactory: SocketFactory,\r\n                    deps : [SOCKET_CONFIG_TOKEN]\r\n                }\r\n            ]\r\n        };\r\n    }\r\n }\r\n"]}